<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>FindPathClass</class>
 <widget class="QDialog" name="FindPathClass">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>400</width>
    <height>300</height>
   </rect>
  </property>
  <property name="windowTitle">
   <string>FindPath</string>
  </property>
  <property name="styleSheet">
   <string notr="true">QDialog {
	background-color: #2a2a2a;
	border: 3px solid #3b3e41;
	border-radius: 3px;
}

QPushButton#btnFindPath, QPushButton#btnCancel {
    background-color: #3b3e41;
    border-radius: 3px;
    border: 1px solid #757575;
    font: bold 12px;
	color: white;
    min-width: 6em;
    padding: 6px;
}

QPushButton#btnFindPath:hover, QPushButton#btnCancel:hover {
    background-color: #85b448;
	cursor: pointer;
}

QPushButton#btnFindPath:pressed, QPushButton#btnCancel:pressed {
    background-color: #d86a39;
}

QSpinBox {
    padding-right: 15px; /* make room for the arrows */
	background-color: #3b3e41;
    border: 1px solid #757575;
	border-radius: 0px;
	padding: 1px 3px;
	color: white;
}

QSpinBox::up-button {
    subcontrol-origin: border;
    subcontrol-position: top right; /* position at the top right corner */
    width: 16px; /* 16 + 2*1px border-width = 15px padding + 3px parent border */
    border: 0px;
}

QSpinBox::up-arrow {
    image: url(Resources/arrow_up.png);
    width: 12px;
    height: 12px;
	padding-top: 3px;
	padding-right: 3px;
}

QSpinBox::up-arrow:hover {
	image: url(Resources/arrow_up_hover.png);
}

QSpinBox::down-button {
    subcontrol-origin: border;
    subcontrol-position: bottom right; /* position at bottom right corner */
    width: 16px;
    border: 0px;
    border-top-width: 0;
}

QSpinBox::down-arrow {
    image: url(Resources/arrow_down.png);
    width: 12px;
    height: 12px;
	padding-bottom: 3px;
	padding-right: 3px;
}

QSpinBox::down-arrow:hover {
	image: url(Resources/arrow_down_hover.png);
}

QLabel {
	color: white;
}

QComboBox {
   border: 1px solid #757575;
	border-radius: 1px;
	padding: 1px 3px;
    min-width: 6em;
	color: #FFFFFF;
}

QComboBox:editable {
    background: white;
}

QComboBox:!editable, QComboBox::drop-down:editable {
     background: #3b3e41;
}

QComboBox:!editable:on, QComboBox::drop-down:editable:on {
    background: #d86a39;
}

QComboBox:on { /* shift the text when the popup opens */
    padding-top: 3px;
    padding-left: 4px;
	color: white;
}

QComboBox::drop-down {
    subcontrol-origin: padding;
    subcontrol-position: top right;
    width: 22px;
	color: white;
    border-left-width: 1px;
    border-left-color: transparent;
    border-left-style: solid; /* just a single line */
    border-top-right-radius: 3px; /* same radius as the QComboBox */
    border-bottom-right-radius: 3px;
}

QComboBox::down-arrow {
    image: url(Resources/arrow_down.png);
    width: 12px;
    height: 12px;
	padding-top: 0px;
	padding-right: 0px;
}

QComboBox::down-arrow:hover {
    image: url(Resources/arrow_down_hover.png);
}

QComboBox::down-arrow:on { /* shift the arrow when popup is open */
    top: 1px;
    left: 1px;
}
QSlider::groove:horizontal {
    border: 1px solid #999999;
    height: 8px; /* the groove expands to the size of the slider by default. by giving it a height, it has a fixed size */
    background: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #B1B1B1, stop:1 #c4c4c4);
    margin: 2px 0;
}

QSlider::handle:horizontal {
    background: qlineargradient(x1:0, y1:0, x2:1, y2:1, stop:0 #b4b4b4, stop:1 #8f8f8f);
    border: 1px solid #5c5c5c;
    width: 18px;
    margin: -2px 0; /* handle is placed by default on the contents rect of the groove. Expand outside the groove */
    border-radius: 3px;
}</string>
  </property>
  <layout class="QGridLayout" name="gridLayout">
   <item row="4" column="0">
    <widget class="QSpinBox" name="expandSizePercent">
     <property name="value">
      <number>50</number>
     </property>
    </widget>
   </item>
   <item row="4" column="1">
    <widget class="QComboBox" name="comboBoxAlgorithm"/>
   </item>
   <item row="5" column="0" colspan="2">
    <widget class="QCheckBox" name="checkBoxAdmissibleArcsOnly">
     <property name="styleSheet">
      <string notr="true">color: white;</string>
     </property>
     <property name="text">
      <string>Use admissible arcs only</string>
     </property>
    </widget>
   </item>
   <item row="6" column="0">
    <widget class="QPushButton" name="btnFindPath">
     <property name="text">
      <string>Find path</string>
     </property>
    </widget>
   </item>
   <item row="6" column="1">
    <widget class="QPushButton" name="btnCancel">
     <property name="text">
      <string>Cancel</string>
     </property>
    </widget>
   </item>
   <item row="2" column="0" colspan="2">
    <layout class="QVBoxLayout" name="verticalLayout">
     <item>
      <widget class="QLabel" name="label">
       <property name="font">
        <font>
         <pointsize>14</pointsize>
         <weight>75</weight>
         <bold>true</bold>
         <underline>true</underline>
        </font>
       </property>
       <property name="text">
        <string>Find path</string>
       </property>
       <property name="alignment">
        <set>Qt::AlignCenter</set>
       </property>
      </widget>
     </item>
     <item>
      <widget class="QSlider" name="sliderCollisionDetectionDensity">
       <property name="maximum">
        <number>100</number>
       </property>
       <property name="value">
        <number>50</number>
       </property>
       <property name="orientation">
        <enum>Qt::Horizontal</enum>
       </property>
      </widget>
     </item>
    </layout>
   </item>
  </layout>
 </widget>
 <layoutdefault spacing="6" margin="11"/>
 <resources/>
 <connections/>
</ui>
